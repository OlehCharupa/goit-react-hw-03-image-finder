{"version":3,"sources":["Components/Button/Button.js","Components/ImageGalleryItem/ImageGalleryItem.js","Components/ImageGallery/ImageGallery.js","helpers/helpers.js","Components/Searchbar/Searchbar.js","Components/Modal/Modal.js","Components/App.js","index.js"],"names":["Button","lodeMore","type","className","onClick","ImageGalleryItem","webformatURL","largeImageURL","activImages","src","alt","data-source","ImageGallery","cards","map","card","key","id","getImages","query","a","page","axios","get","process","response","data","console","log","messege","Searchbar","updateCards","search","setSearch","onSubmit","e","preventDefault","then","result","hits","onChange","name","value","autoComplete","autoFocus","placeholder","Modal","handleKeyDown","code","props","toggleModal","window","addEventListener","this","removeEventListener","Component","App","state","loader","error","modalShow","setState","prev","image","target","dataset","source","scrollTo","top","document","documentElement","scrollHeight","behavior","color","height","width","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.bb74c754.chunk.js","sourcesContent":["import \"./Button.css\"\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Button = ({ lodeMore }) => {\r\n    return (\r\n        <button type=\"button\" className=\"Button\" onClick={lodeMore}>\r\n            Load more\r\n        </button>\r\n    );\r\n};\r\n\r\nButton.propTypes = {\r\n    lodeMore: PropTypes.func\r\n};\r\n\r\nexport default Button;","import \"./ImageGalleryItem.css\"\r\nimport React from 'react';\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst ImageGalleryItem = ({ webformatURL, largeImageURL, type, activImages }) => {\r\n    return (\r\n        <li className=\"ImageGalleryItem\" onClick={activImages}  >\r\n            <img src={webformatURL} alt={type} className=\"ImageGalleryItem-image\" data-source={largeImageURL} />\r\n        </li>);\r\n};\r\nImageGalleryItem.propTypes = {\r\n    webformatURL: PropTypes.string,\r\n    largeImageURL: PropTypes.string,\r\n    type: PropTypes.string,\r\n    activImages: PropTypes.func\r\n}\r\nexport default ImageGalleryItem;","import \"./ImageGallery.css\"\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ cards, activImages }) => {\r\n    return (\r\n        <ul className=\"ImageGallery\">\r\n            {cards.map(card => <ImageGalleryItem {...card} key={card.id} activImages={activImages} />)}\r\n        </ul>\r\n    );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n    cards: PropTypes.array,\r\n    activImages: PropTypes.func\r\n};\r\n\r\nexport default ImageGallery;","import axios from \"axios\";\r\n\r\nexport const getImages = async (query, page = 1) => {\r\n\r\n    try {\r\n        const response = await axios.get(`${process.env.REACT_APP_BASE_URL}?key=${process.env.REACT_APP_API_KEY}&q=${query}&per_page=12&page=${page}`)\r\n        return response.data\r\n    } catch (error) {\r\n        console.log(error.messege.data);\r\n    }\r\n}","import React, { useState } from 'react';\r\nimport \"./Searchbar.css\"\r\nimport PropTypes from 'prop-types';\r\nimport { getImages } from '../../helpers/helpers';\r\n\r\n\r\nconst Searchbar = ({ updateCards, search, setSearch }) => {\r\n    // const [search, setSearch] = useState(\"\")\r\n\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault()\r\n        getImages(search)\r\n            .then(data => {\r\n                const result = data.hits\r\n                updateCards(result)\r\n            })\r\n    }\r\n\r\n    return (\r\n        <header className=\"Searchbar\">\r\n            <form className=\"SearchForm\" onSubmit={onSubmit}>\r\n                <button type=\"submit\" className=\"SearchForm-button\">\r\n                    <span className=\"SearchForm-button-label\">Search</span>\r\n                </button>\r\n\r\n                <input\r\n                    onChange={setSearch}\r\n                    name=\"search\"\r\n                    value={search}\r\n                    className=\"SearchForm-input\"\r\n                    type=\"text\"\r\n                    autoComplete=\"off\"\r\n                    autoFocus\r\n                    placeholder=\"Search images and photos\"\r\n                />\r\n            </form>\r\n        </header>\r\n    );\r\n};\r\n\r\nSearchbar.propTypes = {\r\n    updateCards: PropTypes.func\r\n};\r\n\r\nexport default Searchbar;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport \"./Modal.css\"\r\n\r\nclass Modal extends Component {\r\n    componentDidMount() {\r\n        window.addEventListener(\"keydown\", this.handleKeyDown)\r\n    }\r\n    componentWillUnmount() {\r\n        window.removeEventListener(\"keydown\", this.handleKeyDown)\r\n    }\r\n\r\n    handleKeyDown = e => {\r\n        if (e.code === \"Escape\") {\r\n            this.props.toggleModal()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const { toggleModal, largeImageURL } = this.props\r\n        return (\r\n            <div className=\"Overlay\" onClick={toggleModal}>\r\n                <div className=\"Modal\">\r\n                    <img src={largeImageURL} alt=\"большое изображение\" />\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\r\nModal.propTypes = {\r\n    toggleModal: PropTypes.func,\r\n    largeImageURL: PropTypes.string\r\n};\r\n\r\nexport default Modal;","import React, { Component } from 'react';\r\nimport \"./App.css\"\r\nimport Button from './Button/Button';\r\nimport ImageGallery from './ImageGallery/ImageGallery';\r\nimport Searchbar from './Searchbar/Searchbar';\r\nimport Loader from 'react-loader-spinner'\r\nimport { getImages } from '../helpers/helpers';\r\nimport Modal from './Modal/Modal';\r\n\r\n\r\n\r\nclass App extends Component {\r\n    state = {\r\n        cards: [],\r\n        query: \"all\",\r\n        page: 1,\r\n        loader: true,\r\n        error: false,\r\n        modalShow: false,\r\n        largeImageURL: \"\"\r\n    }\r\n    updateCards = (cards) => {\r\n        this.setState({\r\n            cards,\r\n            page: 2\r\n        })\r\n    }\r\n    lodeMore = () => {\r\n        const { query, page } = this.state\r\n        getImages(query, page)\r\n            .then(data => {\r\n                this.setState(prev => ({\r\n                    cards: [...prev.cards, ...data.hits],\r\n                    page: prev.page + 1\r\n                }))\r\n            })\r\n    }\r\n    activImages = ({ target }) => {\r\n        const image = target.dataset.source\r\n        this.setState({\r\n            largeImageURL: image\r\n        })\r\n        this.toggleModal()\r\n    }\r\n    toggleModal = () => {\r\n        this.setState(state => ({\r\n            modalShow: !state.modalShow,\r\n        }))\r\n    }\r\n    scrollTo = () => {\r\n        window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n        });\r\n\r\n    }\r\n    setSearch = ({ target }) => {\r\n        this.setState({\r\n            query: target.value\r\n        })\r\n    }\r\n    componentDidMount() {\r\n        console.log('componentDidMount');\r\n        getImages(this.state.query).then(data => {\r\n            const result = data.hits\r\n            this.setState({\r\n                cards: [...result],\r\n                loader: false,\r\n                page: 2\r\n            })\r\n        })\r\n    }\r\n    componentDidUpdate() {\r\n        console.log('componentDidUpdate');\r\n        this.scrollTo()\r\n    }\r\n    render() {\r\n        const { cards, loader, modalShow, largeImageURL, query } = this.state\r\n        return (\r\n            <>\r\n                <Searchbar\r\n                    search={query}\r\n                    updateCards={this.updateCards}\r\n                    setSearch={this.setSearch}\r\n                />\r\n                <ImageGallery cards={cards} toggleModal={this.toggleModal} activImages={this.activImages} />\r\n                {loader\r\n                    ? <Loader type=\"Grid\" color=\"#00BFFF\" height={380} width={380} />\r\n                    : <> {cards.length && <Button lodeMore={this.lodeMore} />}\r\n                    </>\r\n                }\r\n                {modalShow && <Modal toggleModal={this.toggleModal} largeImageURL={largeImageURL} />}\r\n\r\n            </>\r\n        );\r\n    };\r\n}\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}